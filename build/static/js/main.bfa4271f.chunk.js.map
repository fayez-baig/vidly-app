{"version":3,"sources":["services/httpService.js","services/movieService.js","services/genreService.js","component/common/filter.jsx","component/common/pagination.jsx","component/common/tableHeader.jsx","component/common/tableBody.jsx","component/common/Table.jsx","component/common/heart.jsx","services/userAuth.js","component/moviesTable.jsx","utils/paginate.js","component/common/search.jsx","component/Movies.jsx","component/common/NotFound.jsx","component/common/NavBar.jsx","component/input.jsx","component/common/select.jsx","component/common/Form.jsx","component/common/Movie-form.jsx","component/Login.jsx","component/logout.jsx","services/userService.js","component/common/Register.jsx","component/common/ProtectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","console","log","interceptors","response","use","error","status","toast","Promise","reject","get","post","put","delete","getMovie","id","http","deleteMovie","saveMovie","movie","_id","body","getGenres","Filter","props","values","textProperty","valueProperty","onItemSelect","selectedGenre","className","map","value","style","cursor","key","onClick","defaultProps","jwt","Pagination","itemCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","aria-label","p","TableHeader","raiseSort","path","sortColoumn","order","onSort","renderSortIcon","coloumn","this","coloumns","col","label","Component","TableBody","content","movies","renderCell","Tables","onDelete","onLike","Table","responsive","Heart","classes","liked","login","email","password","a","data","localStorage","setItem","loginWithJwt","getCurrentUser","getItem","jwtDecode","headers","common","MovieTable","Link","to","title","deleteColoumn","user","isAdmin","push","paginate","items","pageNumber","startIndex","slice","take","Search","name","onChange","type","Movies","state","genreList","searched","handleDelete","allMovies","filter","m","setState","handleSelect","genre","handleSort","handleSearch","currentTarget","getPagedData","filtered","toLowerCase","includes","orderBy","totalCount","length","result","index","indexOf","page","Fragment","bind","handleLike","handlePageChange","NotFound","NavBar","NavLink","data-toggle","data-target","aria-controls","aria-expanded","Input","rest","htmlFor","Select","options","option","Form","validate","joi","schema","abortEarly","errors","details","item","message","handleSubmit","event","preventDefault","doSubmit","validateProperty","obj","handleChange","errorMessage","renderButton","disabled","renderInput","renderSelect","MovieForm","genreId","numberInStock","dailyRentalRate","genres","string","required","number","min","max","populateGenre","populateMovie","movieId","match","params","signleMovie","mapToViewModel","history","replace","onSubmit","Login","username","success","location","setTimeout","window","from","pathname","Redirect","Logout","removeItem","Register","userService","userAuth","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfa4271f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { log } from \"./logService\";\r\n\r\naxios.defaults.baseURL =\r\n  process.env !== \"production\"\r\n    ? \"http://localhost:3900/api\"\r\n    : \"https://shrouded-river-68402.herokuapp.com/api\";\r\n\r\nconsole.log(process.env.REACT_APP_API_URL);\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n\r\n  if (!expectedError) {\r\n    log(error);\r\n    toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst getMovies = () => {\r\n  return http.get(`/movies`);\r\n};\r\nconst getMovie = (id) => {\r\n  return http.get(`/movies/${id}`);\r\n};\r\n\r\nconst deleteMovie = (id) => {\r\n  return http.delete(`/movies/${id}`);\r\n};\r\n\r\nconst saveMovie = (movie) => {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(`/movies/${movie._id}`, body);\r\n  }\r\n\r\n  return http.post(`/movies`, movie);\r\n};\r\n\r\nexport { getMovies, getMovie, deleteMovie, saveMovie };\r\n","import http from \"./httpService\";\r\nimport config from \"./config.json\";\r\nconst getGenres = () => {\r\n  return http.get(`/genres`);\r\n};\r\n\r\nexport { getGenres };\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from \"react\";\r\nconst Filter = (props) => {\r\n  const {\r\n    values,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedGenre,\r\n  } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {values.map((value) => (\r\n        <li\r\n          style={{ cursor: \"pointer\" }}\r\n          className={\r\n            selectedGenre === value\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n          key={value[valueProperty]}\r\n          onClick={() => onItemSelect(value)}\r\n        >\r\n          {value[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  textProperty: \"name\",\r\n  value: \"_id\",\r\n};\r\n\r\nexport default Filter;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = (props) => {\r\n  const { itemCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  const pageCount = Math.ceil(itemCount / pageSize);\r\n  if (pageCount === 1) return \"\";\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((p) => (\r\n          // eslint-disable-next-line no-unused-expressions\r\n          <li\r\n            className={p === currentPage ? \"page-item active\" : \"page-item \"}\r\n            key={p}\r\n            onClick={() => onPageChange(p)}\r\n          >\r\n            <a className=\"page-link\">{p}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nPagination.propTypes = {\r\n  itemCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColoumn = { ...this.props.sortColoumn };\r\n    if (sortColoumn.path === path) {\r\n      sortColoumn.order = sortColoumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColoumn.path = path;\r\n      sortColoumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColoumn);\r\n  };\r\n  renderSortIcon = (coloumn) => {\r\n    const { sortColoumn } = this.props;\r\n    if (coloumn.path !== sortColoumn.path) {\r\n      return null;\r\n    } else if (sortColoumn.order === \"asc\") {\r\n      return <i className=\"fa fa-sort-asc\"></i>;\r\n    } else {\r\n      return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.coloumns.map((col) => (\r\n            <th\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => this.raiseSort(col.path)}\r\n              key={col.path || col.key}\r\n            >\r\n              {col.label}\r\n              {this.renderSortIcon(col)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell(movie, coloumn) {\r\n    if (coloumn.content) {\r\n      return coloumn.content(movie);\r\n    }\r\n    return _.get(movie, coloumn.path);\r\n  }\r\n  render() {\r\n    const { movies, coloumns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {movies.map((movie) => (\r\n          <tr key={movie._id}>\r\n            {coloumns.map((coloumn) => (\r\n              <td key={movie._id + (coloumn.path || coloumn.key)}>\r\n                {this.renderCell(movie, coloumn)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport TableHeader from \"../common/tableHeader\";\r\nimport TableBody from \"../common/tableBody\";\r\nconst Tables = (props) => {\r\n  const { coloumns, sortColoumn, onSort, movies, onDelete, onLike } = props;\r\n  return (\r\n    <Table responsive>\r\n      <TableHeader\r\n        coloumns={coloumns}\r\n        sortColoumn={sortColoumn}\r\n        onSort={onSort}\r\n      />\r\n      <TableBody\r\n        movies={movies}\r\n        onDelete={onDelete}\r\n        onLike={onLike}\r\n        coloumns={coloumns}\r\n      />\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React from \"react\";\r\n\r\nconst Heart = (props) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) {\r\n    classes += \"-o\";\r\n  }\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Heart;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http, { setJwt } from \"./httpService\";\r\n\r\nsetJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(`/auth`, {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Tables from \"../component/common/Table\";\r\nimport Heart from \"../component/common/heart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../services/userAuth\";\r\n\r\nclass MovieTable extends Component {\r\n  coloumns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movie-form/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      label: \"Like \",\r\n      content: (movie) => (\r\n        <Heart liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColoumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie._id)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        DELETE\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.coloumns.push(this.deleteColoumn);\r\n    }\r\n  }\r\n  render() {\r\n    const { movies, onDelete, onLike, sortColoumn, onSort } = this.props;\r\n    return (\r\n      <Tables\r\n        movies={movies}\r\n        onDelete={onDelete}\r\n        onLike={onLike}\r\n        sortColoumn={sortColoumn}\r\n        onSort={onSort}\r\n        coloumns={this.coloumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieTable;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Search = ({ name, value, onChange }) => {\r\n  return (\r\n    <input\r\n      value={value}\r\n      name={name}\r\n      onChange={onChange}\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services//genreService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Filter from \"./common/filter\";\r\nimport Pagination from \"./common/pagination\";\r\nimport MovieTable from \"./moviesTable\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./common/search\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genreList: [],\r\n    searched: \"\",\r\n    sortColoumn: {\r\n      path: \"title\",\r\n      order: \"asc\",\r\n    },\r\n    selectedGenre: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const result = await getMovies();\r\n\r\n    const { data } = await getGenres();\r\n    const genre = [{ _id: \"\", name: \"All Genre\" }, ...data];\r\n    this.setState({ movies: result.data, genreList: genre });\r\n  }\r\n\r\n  handleDelete = async (id) => {\r\n    const allMovies = this.state.movies;\r\n    const movies = allMovies.filter((m) => m._id !== id);\r\n    this.setState({ movies: movies });\r\n    try {\r\n      await deleteMovie(id);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        toast.error(\"Movie not found\");\r\n        this.setState({ movies: allMovies });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleLike(movie) {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  }\r\n\r\n  handlePageChange(page) {\r\n    this.setState({ currentPage: page });\r\n  }\r\n\r\n  handleSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColoumn) => {\r\n    this.setState({ sortColoumn });\r\n  };\r\n\r\n  handleSearch = ({ currentTarget }) => {\r\n    const searched = currentTarget.value;\r\n\r\n    this.setState({ searched, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      movies: allMovies,\r\n      currentPage,\r\n      selectedGenre,\r\n      sortColoumn,\r\n      pageSize,\r\n      searched,\r\n    } = this.state;\r\n    let filtered = allMovies;\r\n    if (searched) {\r\n      filtered = allMovies.filter((movie) =>\r\n        movie.title.toLowerCase().includes(searched)\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered =\r\n        selectedGenre && selectedGenre._id\r\n          ? this.state.movies.filter(\r\n              (m) => m.genre.name === this.state.selectedGenre.name\r\n            )\r\n          : allMovies;\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColoumn.path], [sortColoumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { currentPage, sortColoumn, pageSize, searched } = this.state;\r\n    const { user } = this.props;\r\n    // if (count === 0) {\r\n    //   return <p>NO DATA IS DATA BASE</p>;\r\n    // }\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col\">\r\n            <Filter\r\n              values={this.state.genreList}\r\n              onItemSelect={this.handleSelect.bind(this)}\r\n              selectedGenre={this.state.selectedGenre}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-9 col\">\r\n            {user && (\r\n              <Link to=\"/movie-form/new/\" className=\"btn btn-primary\">\r\n                Add Movie\r\n              </Link>\r\n            )}\r\n\r\n            <p>The Total Record in database is: {totalCount}</p>\r\n            <Search value={searched} onChange={this.handleSearch} />\r\n            <MovieTable\r\n              movies={movies}\r\n              sortColoumn={sortColoumn}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike.bind(this)}\r\n              onSort={this.handleSort.bind(this)}\r\n            />\r\n            <Pagination\r\n              itemCount={totalCount}\r\n              currentPage={currentPage}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange.bind(this)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return <h1>Requested page not found</h1>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler navbar-toggler-right\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n            {!user && (\r\n              <>\r\n                <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n                <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </>\r\n            )}\r\n            {user && (\r\n              <>\r\n                <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n                <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input name={name} {...rest} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ label, name, options, onChange, error }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <label htmlFor={label}>{label}</label>\r\n      <select\r\n        name={name}\r\n        className=\"form-control mb-3\"\r\n        id=\"inputGroupSelect01\"\r\n        onChange={onChange}\r\n      >\r\n        {options.map((option) => {\r\n          return (\r\n            <option key={option._id} value={option._id}>\r\n              {option.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport joi from \"joi-browser\";\r\nimport Input from \"../input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    error: {},\r\n  };\r\n  validate = () => {\r\n    const { data } = this.state;\r\n    const options = { abortEarly: false };\r\n    const { error } = joi.validate(data, this.schema, options);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const error = this.validate();\r\n    this.setState({ error: error || {} });\r\n    this.doSubmit();\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const error = { ...this.state.error };\r\n\r\n    const errorMessage = this.validateProperty(event.currentTarget);\r\n\r\n    if (errorMessage) error[event.currentTarget.name] = errorMessage;\r\n    else delete error[event.currentTarget.name];\r\n\r\n    const data = { ...this.state.data };\r\n\r\n    data[event.currentTarget.name] = event.currentTarget.value;\r\n    this.setState({ data, error });\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, error } = this.state;\r\n    return (\r\n      <Input\r\n        label={label}\r\n        name={name}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={error[name]}\r\n        type={type}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, error } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={error[name]}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport joi from \"joi-browser\";\r\nimport { getGenres } from \"../../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../../services/movieService\";\r\nimport Form from \"./Form\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    error: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: joi.string(),\r\n    title: joi.string().required().label(\"Title\"),\r\n    numberInStock: joi\r\n      .number()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: joi.number().min(0).max(10).required().label(\"Rate\"),\r\n    genreId: joi.required(),\r\n  };\r\n\r\n  populateGenre = async () => {\r\n    const { data } = await getGenres();\r\n    const genres = data;\r\n    this.setState({ genres });\r\n  };\r\n\r\n  populateMovie = async () => {\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n    try {\r\n      const movie = await getMovie(movieId);\r\n      const signleMovie = movie.data;\r\n\r\n      this.setState({ data: this.mapToViewModel(signleMovie) });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        return this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    await this.populateGenre();\r\n\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    const { genres } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\r\n          {this.renderButton(\"Add Movie\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport joi from \"joi-browser\";\r\nimport Form from \"./common/Form\";\r\nimport { login, getCurrentUser } from \"./../services/userAuth\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    error: {},\r\n  };\r\n\r\n  schema = {\r\n    username: joi.string().required().label(\"Username\"),\r\n    password: joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n\r\n      await login(data.username, data.password);\r\n      toast.success(\"Login  Successfully\");\r\n\r\n      const { state } = this.props.location;\r\n      setTimeout(\r\n        () => (window.location = state ? state.from.pathname : \"/\"),\r\n        1000\r\n      );\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        toast.error(\"Invalid Username or Password\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <ToastContainer />\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import { Component } from \"react\";\r\nimport * as userAuth from \"../services/userAuth\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userAuth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nexport async function Register(user) {\r\n  return await http.post(`/users`, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport joi from \"joi-browser\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport * as userService from \"./../../services/userService\";\r\nimport * as userAuth from \"./../../services/userAuth\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    error: {},\r\n  };\r\n  schema = {\r\n    username: joi.string().email().required().label(\"Username\"),\r\n    password: joi.string().min(5).required().label(\"Password\"),\r\n    name: joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { headers } = await userService.Register(this.state.data);\r\n      userAuth.loginWithJwt(headers[\"x-auth-token\"]);\r\n      toast(\"Registered Successfully\");\r\n      setTimeout(() => (window.location = \"/\"), 1000);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        toast.error(\"User already Registered\");\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (userAuth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <ToastContainer />\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"./../../services/userAuth\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Movies from \"./component/Movies\";\r\nimport NotFound from \"./component/common/NotFound\";\r\nimport NavBar from \"./component/common/NavBar\";\r\nimport MovieForm from \"./component/common/Movie-form\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/logout\";\r\nimport Register from \"./component/common/Register\";\r\nimport * as userAuth from \"./services/userAuth\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"./App.css\";\r\nimport ProtectedRoute from \"./component/common/ProtectedRoute\";\r\n\r\n//Vidly app\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const user = userAuth.getCurrentUser();\r\n    this.setState({ user });\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar user={user} />\r\n        <main className=\"container mt-4\">\r\n          <Switch>\r\n            <Route path=\"/notfound\" component={NotFound}></Route>\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/register\" component={Register}></Route>\r\n            <Route path=\"/logout\" component={Logout}></Route>\r\n            <ProtectedRoute path=\"/movie-form/:id\" component={MovieForm} />\r\n            <Route\r\n              exact\r\n              path=\"/movies\"\r\n              render={(props) => <Movies {...props} user={user} />}\r\n            ></Route>\r\n            <Redirect exact from=\"/\" to=\"/movies\"></Redirect>\r\n            <Redirect to=\"/notfound\"></Redirect>\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}